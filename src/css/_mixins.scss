@mixin flex($justify: normal, $direction: row, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin form {
  width: 15em;
  border-radius: 3px;
  align-self: center;
  @include flex(space-evenly, column, center);
}

@mixin dashButton {
  width: 100%;
  font-family: $main-font;
  height: 3em;
  margin-top: 3em;
  background: $good-button;
  color: $light-font;
  border: none;
  cursor: pointer;
  border-radius: 2px;
  
  &:hover {
    background: lighten($good-button, 20%);
   }
}

@mixin transitionColor {
  transition-property: background-color, color;
  transition-duration: .2s;
  transition-timing-function: ease-in-out;
}

@mixin hex-to-filter($color: #000, $opacity: 1) {
  $r: red($color) / 255;
  $g: green($color) / 255;
  $b: blue($color) / 255;
  $a: $opacity;

  // grayscale fallback if SVG from data url is not supported
  $lightness: lightness($color);
  filter: saturate(0%) brightness(0%) invert($lightness) opacity($opacity);

  // color filter
  $svg-filter-id: "recolor";
  filter: url('data:image/svg+xml;utf8,\
    <svg xmlns="http://www.w3.org/2000/svg">\
      <filter id="#{$svg-filter-id}" color-interpolation-filters="sRGB">\
        <feColorMatrix type="matrix" values="\
          0 0 0 0 #{$r}\
          0 0 0 0 #{$g}\
          0 0 0 0 #{$b}\
          0 0 0 #{$a} 0\
        "/>\
      </filter>\
    </svg>\
    ##{$svg-filter-id}');
}